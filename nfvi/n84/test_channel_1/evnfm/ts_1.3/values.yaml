global:
  hosts:
    so: ""
    iam: "evnfm-iam.ingress.n84-eccd2.sero.gic.ericsson.se"
    vnfm: "evnfm.ingress.n84-eccd2.sero.gic.ericsson.se"
    wano: ""
    pf: ""
    uds: ""
  registry:
    # If deploying from the director node on a CCD environment, the url can be retrieved using:
    # kubectl get ingress eric-lcm-container-registry-ingress -n kube-system -o jsonpath="{.spec.tls[*].hosts[0]}"; echo
    url: "container-registry.ingress.n84-eccd2.sero.gic.ericsson.se"
    #
    # If deploying on a CCD environment with version < 2.7.0 credentials are stored as Kubernetes secrets in kube-system namespace.
    # The username can be retrieved using the following command
    # kubectl get secrets cr-registry-credentials -n kube-system -o jsonpath="{.data.custom-user}" | base64 -d; echo
    #
    # If deploying on a CCD environment with version >= 2.7.0 credentials are encrypted with htpasswd automatically, and can be retrieved using the following Openstack command
    # openstack stack output show "stack-name" container_registry_custom_user_id -f json | jq '.output_value' -M -r
    username: "admin"
    #
    # If deploying on a CCD environment with version < 2.7.0 credentials are stored as Kubernetes secrets in kube-system namespace.
    # The password can be retrieved using the following command
    # kubectl get secrets cr-registry-credentials -n kube-system -o jsonpath="{.data.custom-pass}" | base64 -d; echo
    #
    # If deploying on a CCD environment with version >= 2.7.0 credentials are encrypted with htpasswd automatically, and can be retrieved using the following Openstack command
    # openstack stack output show "stack-name" container_registry_custom_pw -f json | jq '.output_value' -M -r
    password: "9SBV1SFb9WAn73nfcciJGCI2VYM8q6Wq"
    pullSecret: "k8s-registry-secret"
  support:
    ipv6:
      enabled: false
  timezone: CET

# Warning! If changing these application tags from true to false and that application
# is already installed, then that application will be removed and data will be lost!
tags:
  eoEvnfm: true
  eoVmvnfm: true
  eoSo: false
  eoWano: false
  eoPf: false
  eoUds: false

# This is the same as the global.iam hostname
eric-sec-access-mgmt:
  ingress:
    hostname: "evnfm-iam.ingress.n84-eccd2.sero.gic.ericsson.se"
  statefulset:
    replicas: 2

# Fill only if deploying EO Container VNFM (EO EVNFM)
eric-eo-evnfm:
  eric-am-common-wfs:
    helm:
      location: "/usr/local/bin/helm"
    kube:
      location: "/usr/local/bin/kubectl"
  eric-lcm-container-registry:
    ingress:
      hostname: "evnfm-docker-registry.ingress.n84-eccd2.sero.gic.ericsson.se"
    registry:
      volumes:
        data:
          size: "150Gi"
  eric-lcm-helm-chart-registry:
    ingress:
      enabled: true
      hostname: "evnfm-helm-registry.ingress.n84-eccd2.sero.gic.ericsson.se"
    env:
      secret:
        BASIC_AUTH_USER: "vnfm"
        BASIC_AUTH_PASS: "vnfm"
  eric-vnfm-orchestrator-service:
    oss:
      topology:
        secretName: null
    smallstack:
      application: true

# Fill only if deploying EO Container VNFM (EO VNFM) or EO VM VNFM
eric-eo-evnfm-nbi:
  eric-evnfm-rbac:
    defaultUser:
      username: "vnfm"
      password: "vnfm"

# Fill only if deploying EO VM VNFM
eric-eo-evnfm-vm:
  eric-vnflcm-service:
    oss:
      secretName: null

# Fill only if deploying EO Service Orchestration (EO SO)
eric-eo-so:
  defaultUser:
    username: ""
    password: ""

# Fill only if deploying EO WAN Orchestration (EO WANO)
eric-eo-wano:
  defaultUser:
    username: ""
    password: ""

# Fill only if deploying EO PF Orchestration (EO PF)
eric-oss-pf:
  defaultUser:
    username: ""
    password: ""

# Please refer to the EO dimensioning guide for the appropriate size of the BRO volume
# The size will be dependent on which applications are being deployed
eric-ctrl-bro:
  persistence:
    persistentVolumeClaim:
      size: "20Gi"

eric-data-search-engine:
  service:
    network:
      protocol:
        IPv6: false
