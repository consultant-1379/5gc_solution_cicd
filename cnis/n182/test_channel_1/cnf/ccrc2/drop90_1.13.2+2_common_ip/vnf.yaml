vnflcm:
  vnfInstanceName: eric-ccrc2  ##Taken from nodeName in site.yaml for ccrc2 in 5gc_solution_cicd
  vnfProductName: CCRC
  vnfSoftwareVersion: 1.13.2+2 
  instantiate-file: day0/instantiate.json
  values-file: day0/values.yaml
  namespace: ccrc2 ##Taken from vnflcm.namespace in site.yaml for ccrc2 in 5gc_solution_cicd
access-info:
  oam: 214.5.131.187 ## Taken from https://hydra.gic.ericsson.se/network/369736/ipv4
  ldap-admin:
    user: sysadmin
    pass: UGEkJHcwcmQ0TERBUA== ##Taken from ccrc.lcm.day0-password in ccrc2_fivegcsafe_config.yml in 5gc_solution_cicd
  users:
  - user: ccrcoam ##Taken from ccrc.day1-users in ccrc2_fivegcsafe_config.yml in 5gc_solution_cicd
    pass: V2Vha1BhcyN3b3JELTE= ##Taken from ccrc.day1-users in ccrc2_fivegcsafe_config.yml in 5gc_solution_cicd
    pass-init: Q2hhbmdlbWUxc3Qh ##Taken from ccrc.day1-users in ccrc2_fivegcsafe_config.yml in 5gc_solution_cicd
  - user: ccrcsec ##Taken from ccrc.day1-users in ccrc2_fivegcsafe_config.yml in 5gc_solution_cicd
    pass: V2Vha1BhcyN3b3JELTE= ##Taken from ccrc.day1-users in ccrc2_fivegcsafe_config.yml in 5gc_solution_cicd
    pass-init: Q2hhbmdlbWUxc3Qh ##Taken from ccrc.day1-users in ccrc2_fivegcsafe_config.yml in 5gc_solution_cicd
pipeline:
- module: create-namespace
- module: create-k8s-secret
  name: eric-sec-ldap-server-creds
  sources:
  - type: literal
    key: adminuser
    value: sysadmin
  - type: literal
    key: passwd
    value: keycloak
  - type: literal
    key: adminpasswd
    value: $6$Afe145T7$WodT.JfbVu27fW/c6IiuCU/BSCW.ytmkpr98GZYXqO8xMcGUuSem9N07qOA0WfZx3.tgcFnHfSq2zqe3mJJ.n0
- module: create-k8s-secret
  name: eric-data-distributed-coordinator-creds
  sources:
  - type: literal
    key: etcdpasswd
    value: admin
- module: create-k8s-secret
  name: eric-data-object-storage-mn-creds
  sources:
  - type: literal
    key: accesskey
    value: adminaccess
  - type: literal
    key: secretkey
    value: adminaccess
- module: create-k8s-secret
  name: eric-sec-access-mgmt-creds
  sources:
  - type: literal
    key: kcadminid
    value: admin
  - type: literal
    key: kcpasswd
    value: admin
- module: instantiate
- module: verify-pod-running
- module: run-k8s-command
  name: Create networkpolicy to allow accessing eric-pm-server and eric-data-search-engine
  cmd: |
    apply -f {file1}
    apply -f {file2}
    apply -f {file3}
  inline-files:
    file1: network-policy/eric-pm-server-allow.yaml
    file2: network-policy/eric-data-search-engine-allow.yaml
    file3: network-policy/eric-fh-alarm-handler-allow.yaml
# Align the way to create ingress with fivegcsafe, or it can't be accessed in fivegcsafe test
- module: run-k8s-command
  name: Create ingresses eric-pm-server, eric-data-search-engine and eric-fh-alarm-handler
  cmd: |
    apply -f {file1}
    apply -f {file2}
    apply -f {file3}
  inline-files:
    file1: ingress/eric-pm-server-ingress.yaml
    file2: ingress/eric-data-search-engine-ingress.yaml
    file3: ingress/eric-fh-alarm-handler-ingress.yaml
# - module: run-k8s-command
#   name: pm-server ingress
#   cmd: create ingress eric-pm-server --rule="ccrc-eric-pm-server.ingress.node182-cluster1.seli.gic.ericsson.se/*=eric-pm-server:9089"
# - module: run-k8s-command
#   name: data-search-engine ingress
#   cmd: create ingress eric-data-search-engine-tls --rule="ccrc-eric-data-search-engine-tls.ingress.node182-cluster1.seli.gic.ericsson.se/*=eric-data-search-engine-tls:9200"
# - module: run-k8s-command
#   name: fh-alarm-handler ingress
#   cmd: create ingress eric-fh-alarm-handler --rule="ccrc-eric-fh-alarm-handler.ingress.node182-cluster1.seli.gic.ericsson.se/*=eric-fh-alarm-handler:5006"
- module: verify-pod-ready
  check-interval: 5
  deployments:
  - eric-cm-yang-provider
  statefulsets:
  - eric-nrf-kvdb-ag-server
  - eric-nssf-kvdb-ag-server
- module: load-cmyp-user-config
  file: day1/user-config.xml
  proto: netconf
  retry-interval: 30
- module: sleep
  duration: 30
- module: change-initial-password
- module: load-cmyp-app-config
  file: day1/external-certificates.xml
  user-id: 1
  proto: netconf
- module: sleep
  duration: 10
- module: load-cmyp-app-config
  file: day1/nrf-config.xml
  proto: netconf
- module: sleep
  duration: 10
- module: load-cmyp-app-config
  file: day1/nrfagent-config.xml
  proto: netconf
- module: sleep
  duration: 10
- module: load-cmyp-app-config
  file: day1/nssf-config.xml
  proto: netconf
- module: sleep
  duration: 10
- module: load-cmyp-app-config
  file: day1/ddc-config.xml
  proto: netconf
- module: sleep
  duration: 10
- module: load-cmyp-app-config
  file: day1/snmp-config.xml
  proto: netconf
- module: sleep
  duration: 60
- module: provision-nssf
  host: nssf-prov.ccrc2.n182.seli.gic.ericsson.se
  trustca: ../../../../certs/root/RootCA.crt
  client-cert: ../../../../certs/cnf_common_ip/ccrc2/ccrc-iccr-server.crt  ## Under 5gc_solution_cicd/cnis/n182/certs/cnf_common_ip/ccrc2
  client-key: ../../../../certs/cnf_common_ip/ccrc2/ccrc-iccr-server.key  ## Under 5gc_solution_cicd/cnis/n182/certs/cnf_common_ip/ccrc2
  prov-data:
  - api-path: /profiles/amf-set-profiles/amf-set-id/240-81-ff-002
    json-data: day1/nssf-provisioning/amf-set-profile.json
  - api-path: /profiles/nrf-instance-profiles/nrf-slice-common-region-001
    json-data: day1/nssf-provisioning/nrf-instance-profile.json
  - api-path: /profiles/tai-group-nss-profiles/tai-group-slice1-amf-001
    json-data: day1/nssf-provisioning/tai-group-profile.json
  - api-path: /profiles/network-slice-instances/nsi-slice-common-region-001
    json-data: day1/nssf-provisioning/slice-instance-profile.json
